---
# tasks file for base_httpd

- name: Lock down 'pi' user (if it exists and is in use) prior to deletion
  user:
    name: pi
    # python -c 'import crypt; print crypt.crypt("This is my Password", "$1$SomeSalt$")'
    password: $1$SomeSalt$u7WbTX3IA3U5ugjt0GW.P1
    shell: /dev/null
    groups: null
    append: no
    state: present
    update_password: always
  when: ansible_user_id == "pi" or ansible_env.SUDO_USER == "pi"

- name: Remove user 'pi' (when not in use)
  user:
    name: pi
    state: absent
    remove: yes
  when: not ansible_user_id == "pi" or not ansible_env.SUDO_USER == "pi"

- name: Add user 'philote' for Ansible control (DEB)
  user:
    name: philote
    # python -c 'import crypt; print crypt.crypt("This is my Password", "$1$SomeSalt$")'
    password: $1$SomeSalt$u7WbTX3IA3U5ugjt0GW.P1
    shell: /bin/bash
    groups: sudo,adm
    append: yes
    state: present
    update_password: on_create
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"


- name: Add user 'philote' for Ansible control (RHEL)
  user:
    name: philote
    # python -c 'import crypt; print crypt.crypt("This is my Password", "$1$SomeSalt$")'
    password: $1$SomeSalt$u7WbTX3IA3U5ugjt0GW.P1
    shell: /bin/bash
    groups: wheel
    append: yes
    state: present
    update_password: on_create
  when: ansible_distribution == "Red Hat Enterprise Linux" or ansible_distribution == "CentOS"


- name: Add authorized key for 'philote'
  authorized_key:
    user: philote
    state: present
    key: "{{ lookup('file', 'id_rsa.pub') }}"

