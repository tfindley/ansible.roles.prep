---
# tasks file for ansible-prep

- name: Ansible-Prep.Main - Gather facts
  ansible.builtin.setup:
    filter: ansible_default_ipv4.address

# Context
# -------
# The context section is used to load variables. This has been built in a specific order so that subsequent variable files override earlier variables.
# This generates a specicifity very similar to what we see in Chef.
# The order is as follows:
#  - OS Family (i.e: Debian, RedHat)
#  - Distribution (i.e: RedHat Enterprise, CentOS, Ubuntu)
#  - LSB name (i.e: Raspbian) - only applicable to Debian-based OS's, and primarily needed to support Raspbian on Raspberry Pi's as its the only place Raspbian is specified
#  - Distribution-Version (i.e: Debian-10)

# Remember these are CASE SENSITIVE


# This deals with family-specific variabiles. Store them in /var/family/___.yml
- name: Ansible-Prep.Main - Load OS family specific variables file
  include_vars:
    file: "context/family/{{ ansible_os_family }}.yml" # RedHat.yml
  ignore_errors: true


# This deals with os-specific variabiles. Store them in /var/os/___.yml
- name: Ansible-Prep.Main - Load os specific variables file
  include_vars: "{{ item }}"
  with_first_found:
    - "context/os/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml" # Debian-10.yml
    - "context/os/{{ ansible_lsb.id }}.yml" # Raspbian.yml
    - "context/os/{{ ansible_distribution }}.yml" # RedHat.yml
  ignore_errors: true


# We load these in blocks to that we dont have to copy every single varialbe into files with a higher specicity.
# Remember:
#   - Variables in more specific files completely overwrite variables loaded before it.
#   - Variables do not concatonate. You must specify the whole variable again.
# -------

# First load the passwd user account database. We need this in subsequent steps to identify user accounts and change their behaviour. 
- name: Ansible-Prep.Main - Load getent passwd database
  ansible.builtin.getent:
    database: passwd

# Install any requirements for further Ansible runs.
- name: Ansible-Prep.Main - Hand off to PreFlight Tasks
  include_tasks: preflight.yml

# Affect default network config
# - name: Ansible-Prep.Main - Hand off ot Network task
#   include_tasks: network.yml
#   when: not ansible_distribution == "RedHat" or ansible_distribution == "CentOS"

# Now we run a check to see what user the role is being run as. We store that as a variable to use later.
- name: Ansible-Prep.Main - Checking the user Ansible is running under
  ansible.builtin.shell: "who | grep {{ default_usr }}"
  ignore_errors: yes
  register: default_usr_active
  when: default_usr in ansible_facts.getent_passwd

# Here we create the ansible user that we will use in the future - this assumes you havent built the system using PXE and kickstart
- name: Ansible-Prep.Main - Hand off to Ansible user setup Tasks
  include_tasks: ansible.yml

# Now we handle the default user account (typically this account will be the same name as the OS - all lower case)
# First run: Default Account will be locked down
# Second run: Default Account will be deleted.
- name: Ansible-Prep.Main - Hand off to User Handler Tasks
  include_tasks: user.yml